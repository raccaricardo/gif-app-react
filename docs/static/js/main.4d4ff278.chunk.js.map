{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getFetchGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputvalue","setinputvalue","handleSubmit","e","preventDefault","trim","length","c","onSubmit","type","value","onChange","target","onClick","GifGridItem","id","url","title","console","log","className","src","alt","getFetchGifs","query","a","limit","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","category","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","setcategories","cat","ReactDOM","render","document","getElementById"],"mappings":"6MAkCeA,EA/BK,SAAC,GAAuB,IAApBC,EAAmB,EAAnBA,YAEpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAMMC,EAAe,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAY,SAAAS,GAAC,OAAIP,GAAJ,mBAAmBO,OAChCN,EAAc,MAGtB,OACI,mCACI,uBAAMO,SAAWN,EAAjB,UACI,uBACIO,KAAK,OACLC,MAAQV,EACRW,SAjBU,SAACR,GACvBF,EAAcE,EAAES,OAAOF,UAkBf,wBAAQG,QAAUX,EAAlB,2B,QCZDY,G,MAXK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAE5B,OADAC,QAAQC,IAAIF,EAAOF,EAAIC,GAEnB,sBAAKI,UAAU,OAAf,UAEI,qBAAcC,IAAKL,EAAKM,IAAKL,GAAnBF,GACV,4BAAIE,S,uBCRHM,EAAY,uCAAG,WAAOC,GAAP,qCAAAC,EAAA,6DAAcC,EAAd,+BAAuB,EAGxCV,EAHiB,0FAGyEW,UAAUH,GAHnF,kBAGoGE,GAHpG,SAILE,MAAMZ,GAJD,cAIlBa,EAJkB,gBAKDA,EAAKC,OALJ,uBAKhBC,EALgB,EAKhBA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLnB,GAAImB,EAAInB,GACRE,MAAOiB,EAAIjB,MAEXD,IAAG,UAAEkB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBpB,QAZd,kBAejBgB,GAfiB,4CAAH,sDC0BVK,EAvBC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEf,ECHwB,SAACA,GAAyB,IAAfZ,EAAc,uDAAN,EAC7C,EAA0B3B,mBAAS,CACjCgC,KAAM,GACNQ,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAXAC,qBAAU,WACRnB,EAAae,EAAUZ,GAAOiB,MAAK,SAACC,GAClCC,YAAW,WACTJ,EAAS,CACPV,KAAMa,EACNL,SAAS,MAEV,UAEJ,CAACD,IAEGE,EDbmBM,CAAaR,EAAU,GAAxCP,EAAP,EAAOA,KAAMQ,EAAb,EAAaA,QAKf,OACE,qCACE,mCAAMD,EAAN,OACIC,GAAW,oBAAInB,UAAU,kBAAd,0BACf,qBAAKA,UAAU,gCAAf,SACGW,EAAKE,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,aACAd,UAAU,0BAENc,GADCA,EAAInB,aEOJgC,EAvBM,WAEjB,MAAoChD,mBAAS,CAAE,KAA/C,mBAAOiD,EAAP,KAAmBC,EAAnB,KAKA,OACI,qCACI,iDACA,uBACA,cAAC,EAAD,CAAanD,YAAcmD,IAC3B,6BAEQD,EAAWf,KAAI,SAAAiB,GAAG,OACd,cAAC,EAAD,CAAqBZ,SAAWY,GAAjBA,YCbvCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4d4ff278.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( { setCategory } ) => {\r\n\r\n    const [inputvalue, setinputvalue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputvalue(e.target.value); \r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputvalue.trim().length > 2 ) {\r\n            setCategory(c=>[ inputvalue, ...c ]);\r\n            setinputvalue('');\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type=\"text\" \r\n                    value={ inputvalue } \r\n                    onChange={ handleInputChange } \r\n                />\r\n                <button onClick={ handleSubmit }>Agregar</button>        \r\n            </form>\r\n        </>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\nexport default AddCategory;\r\n","\r\nimport React from 'react';\r\n\r\nconst GifGridItem = ({ id, url, title }) => {\r\n    console.log(title, id, url );\r\n    return (\r\n        <div className=\"card\" >\r\n            \r\n            <img key={id} src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","\r\nexport const getFetchGifs = async( query, limit  = 2 ) => {\r\n    \r\n    \r\n     const url = `https://api.giphy.com/v1/gifs/search?api_key=bl2gzB2CmrW3D4dj2QIoaeERDSwJZrwO&q=${ encodeURI(query) }&limit=${limit}`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        // url: img.images.downsize_medium.url\r\n        url: img.images?.downsized_medium.url, //el signo ? es para indicar que pueden no llegar llegar\r\n      };\r\n    });\r\n    return gifs;\r\n   \r\n}\r\n\r\n","import React from \"react\";\r\nimport \"animate.css\";\r\nimport GifGridItem from \"./GifGridItem\";\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const {data, loading} = useFetchGifs(category, 5);\r\n \r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <h3> {category} </h3>\r\n        { loading && <h2 className=\"animate__shakeY\">Cargando... </h2>}\r\n      <div className=\"card-grid animate__backInDown\" >\r\n        {data.map((img) => (\r\n          <GifGridItem \r\n          className=\"animate__fadeInTopLeft\" \r\n          key={img.id} \r\n          {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getFetchGifs } from \"../helpers/getFetchGifs\";\r\n\r\nexport const useFetchGifs = (category, limit = 2) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getFetchGifs(category, limit).then((imgs) => {\r\n      setTimeout(() => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n      }, 1000);\r\n    });\r\n  }, [category]); //aca establecemos que si category cambia, volvera a ejecutarse useEffect\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setcategories] = useState([ \"\" ]);\r\n    \r\n    // const handleAdd = () => {\r\n    //     setcategories([...categories, \"Racing\"]);\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>Gift Expert App</h2>   \r\n            <hr />\r\n            <AddCategory setCategory= {setcategories} />\r\n            <ol>\r\n                {\r\n                    categories.map(cat => (\r\n                        <GifGrid key={ cat } category={ cat } />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <GiftExpertApp />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );"],"sourceRoot":""}